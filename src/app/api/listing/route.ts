import { NextResponse } from "next/server";
import getAllListings from "@/lib/firebase/firestore/listing/getAllListings";
import addListing from "@/lib/firebase/firestore/listing/addListing";

/*
 * Create new Listing
 *
 * Params:
 *  None
 * Request body:
 *  user_id: id of the owner of the Listing
 *  title: title of the Listing
 *  price: price of the Listing
 *  condition: condition of the Listing
 *  category: category of the Listing
 *  description: description of the Listing
 *  image_paths: list of paths to images for the Listing
 * Return:
 *  data: id of the new Listing generated by firestore
 */
export async function POST(req: Request) {
  // get updated listing data from req body
  const data = await req.json();

  // TODO: addListing to db

  return NextResponse.json({ data: { listing_id: newListing().id }, error: null });
}

/*
 * Get all Listings that do not have a selected buyer and match the query
 *
 * Params:
 *  None
 * Request body:
 *  query: filter/sort query for Listing search
 *  limit: max number of Listings to retrieve
 *  last_listing_id: id of last Listing retrieved
 * Return:
 *  data: list of Listings that match the query (truncated data)
 */
export async function GET(req: Request) {
  // get query data from req body
  const data = await req.json();

  // TODO: query listings from db

  const listing: Listing = newListing();
  return NextResponse.json({ data: { listings: [{
      updated: listing.updated,
      title: listing.title,
      price: listing.price,
      owner_id: listing.owner,
      owner_pfp: "",
      seller_rating: 0,
      description: listing.description,
      thumbnail: listing.image_paths.length > 0 ? listing.image_paths[0] : "",
      id: listing.id,
    }]
  }, error: null });
}
